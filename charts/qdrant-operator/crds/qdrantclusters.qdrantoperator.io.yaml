# This CustomResourceDefinition was generated by the NeonFORGE Operator SDK.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: qdrantclusters.qdrantoperator.io
spec:
  group: qdrantoperator.io
  names:
    kind: QdrantCluster
    plural: qdrantclusters
    shortNames: []
    singular: qdrantcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Represents a Qdrant cluster.
        properties:
          spec:
            properties:
              image:
                description: Options for defining the container image.
                properties:
                  repository:
                    description: The image repository.
                    type: string
                  pullPolicy:
                    description: The image pull policy.
                    type: string
                  tag:
                    description: The image tag.
                    type: string
                type: object
              persistence:
                description: Persistence options.
                properties:
                  size:
                    description: The disk size for each cluster node.
                    type: string
                  storageClassName:
                    description: The storage class to use when creating volumes.
                    type: string
                type: object
              replicas:
                description: The number of servers to deploy in the cluster.
                format: int32
                type: integer
              metrics:
                description: Metrics related options.
                properties:
                  serviceMonitorEnabled:
                    description: Whether to create a Prometheus ServiceMonitor for the cluster.
                    type: boolean
                  grafana:
                    description: Grafana related options.
                    properties:
                      dashboardEnabled:
                        description: |-
                          Whether to create a GrafanaDashboard resource. This depends on the Grafana
                           Operator being installed.
                        type: boolean
                      datasourceName:
                        description: The datasource name to use for the dashboard.
                        type: string
                      instanceSelector:
                        description: The Grafana instance selector.
                        properties:
                          matchExpressions:
                            description: |-
                              matchExpressions is a list of label selector requirements. The requirements are
                               ANDed.
                            items:
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values. Valid operators are
                                     In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn, the values
                                     array must be non-empty. If the operator is Exists or DoesNotExist, the values
                                     array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the
                               matchLabels map is equivalent to an element of matchExpressions, whose key field
                               is "key", the operator is "In", and the values array contains only "value". The
                               requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  interval:
                    description: The metrics scrape interval. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: string
                  scrapeTimeout:
                    description: The metrics scrape timeout. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: string
                  honorLabels:
                    description: Whether to honor labels in the ServiceMonitor. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: boolean
                type: object
              nodeSelector:
                description: Where to put the servers.
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              antiAffinity:
                description: |-
                  Whether to add an antiAffinity rule to the statefulset. Enabling this will ensure
                   that only 1 qdrant container will be deployed per kubernetes host.
                type: boolean
              resources:
                description: The resource requirements for each qdrant server.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims, that are
                       used by this container.

                       This is an alpha field and requires enabling the DynamicResourceAllocation
                       feature gate.

                       This field is immutable. It can only be set for containers.
                    items:
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of the Pod
                             where this field is used. It makes that resource available inside a container.
                          type: string
                      type: object
                    type: array
                  limits:
                    additionalProperties:
                      properties:
                        format:
                          enum:
                          - decimalexponent
                          - binarysi
                          - decimalsi
                          type: string
                        value:
                          type: string
                      type: object
                    description: |-
                      Limits describes the maximum amount of compute resources allowed. More info:
                       https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      properties:
                        format:
                          enum:
                          - decimalexponent
                          - binarysi
                          - decimalsi
                          type: string
                        value:
                          type: string
                      type: object
                    description: |-
                      Requests describes the minimum amount of compute resources required. If Requests
                       is omitted for a container, it defaults to Limits if that is explicitly
                       specified, otherwise to an implementation-defined value. Requests cannot exceed
                       Limits. More info:
                       https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              podSecurityContext:
                description: The pod security context options.
                properties:
                  fsGroup:
                    description: |-
                      A special supplemental group that applies to all containers in a pod. Some
                       volume types allow the Kubelet to change the ownership of that volume to be
                       owned by the pod:

                       1. The owning GID will be the FSGroup 2. The setgid bit is set (new files
                       created in the volume will be owned by FSGroup) 3. The permission bits are OR'd
                       with rw-rw----

                       If unset, the Kubelet will not modify the ownership and permissions of any
                       volume. Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: |-
                      fsGroupChangePolicy defines behavior of changing ownership and permission of the
                       volume before being exposed inside Pod. This field will only apply to volume
                       types which support fsGroup based ownership(and permissions). It will have no
                       effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid
                       values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                       Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process. Uses runtime default if
                       unset. May also be set in SecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence for
                       that container. Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user. If true, the Kubelet
                       will validate the image at runtime to ensure that it does not run as UID 0
                       (root) and fail to start the container if it does. If unset or false, no such
                       validation will be performed. May also be set in SecurityContext.  If set in
                       both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process. Defaults to user
                       specified in image metadata if unspecified. May also be set in SecurityContext. 
                       If set in both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence for that container. Note that this field cannot
                       be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to all containers. If unspecified, the
                       container runtime will allocate a random SELinux context for each container. 
                       May also be set in SecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence for
                       that container. Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by the containers in this pod. Note that this field
                       cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be
                           used. The profile must be preconfigured on the node to work. Must be a
                           descending path, relative to the kubelet's configured seccomp profile location.
                           Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied. Valid options are:

                           Localhost - a profile defined in a file on the node should be used.
                           RuntimeDefault - the container runtime default profile should be used.
                           Unconfined - no profile should be applied.
                        type: string
                    type: object
                  supplementalGroups:
                    description: |-
                      A list of groups applied to the first process run in each container, in addition
                       to the container's primary GID, the fsGroup (if specified), and group
                       memberships defined in the container image for the uid of the container process.
                       If unspecified, no additional groups are added to any container. Note that group
                       memberships defined in the container image for the uid of the container process
                       are still effective, even if they are not included in this list. Note that this
                       field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                  sysctls:
                    description: |-
                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with
                       unsupported sysctls (by the container runtime) might fail to launch. Note that
                       this field cannot be set when spec.os.name is windows.
                    items:
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      type: object
                    type: array
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers. If unspecified, the
                       options within a container's SecurityContext will be used. If set in both
                       SecurityContext and PodSecurityContext, the value specified in SecurityContext
                       takes precedence. Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                           (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                           GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process'
                           container. All of a Pod's containers must have the same effective HostProcess
                           value (it is not allowed to have a mix of HostProcess containers and
                           non-HostProcess containers). In addition, if HostProcess is true then
                           HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process. Defaults
                           to the user specified in image metadata if unspecified. May also be set in
                           PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the
                           value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              securityContext:
                description: The container security context options.
                properties:
                  allowPrivilegeEscalation:
                    description: |-
                      AllowPrivilegeEscalation controls whether a process can gain more privileges
                       than its parent process. This bool directly controls if the no_new_privs flag
                       will be set on the container process. AllowPrivilegeEscalation is true always
                       when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this
                       field cannot be set when spec.os.name is windows.
                    type: boolean
                  capabilities:
                    description: |-
                      The capabilities to add/drop when running containers. Defaults to the default
                       set of capabilities granted by the container runtime. Note that this field
                       cannot be set when spec.os.name is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: |-
                      Run container in privileged mode. Processes in privileged containers are
                       essentially equivalent to root on the host. Defaults to false. Note that this
                       field cannot be set when spec.os.name is windows.
                    type: boolean
                  procMount:
                    description: |-
                      procMount denotes the type of proc mount to use for the containers. The default
                       is DefaultProcMount which uses the container runtime defaults for readonly paths
                       and masked paths. This requires the ProcMountType feature flag to be enabled.
                       Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: |-
                      Whether this container has a read-only root filesystem. Default is false. Note
                       that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process. Uses runtime default if
                       unset. May also be set in PodSecurityContext.  If set in both SecurityContext
                       and PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user. If true, the Kubelet
                       will validate the image at runtime to ensure that it does not run as UID 0
                       (root) and fail to start the container if it does. If unset or false, no such
                       validation will be performed. May also be set in PodSecurityContext.  If set in
                       both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process. Defaults to user
                       specified in image metadata if unspecified. May also be set in
                       PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the
                       value specified in SecurityContext takes precedence. Note that this field cannot
                       be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to the container. If unspecified, the
                       container runtime will allocate a random SELinux context for each container. 
                       May also be set in PodSecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by this container. If seccomp options are provided at
                       both the pod & container level, the container options override the pod options.
                       Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be
                           used. The profile must be preconfigured on the node to work. Must be a
                           descending path, relative to the kubelet's configured seccomp profile location.
                           Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied. Valid options are:

                           Localhost - a profile defined in a file on the node should be used.
                           RuntimeDefault - the container runtime default profile should be used.
                           Unconfined - no profile should be applied.
                        type: string
                    type: object
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers. If unspecified, the
                       options from the PodSecurityContext will be used. If set in both SecurityContext
                       and PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                           (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                           GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process'
                           container. All of a Pod's containers must have the same effective HostProcess
                           value (it is not allowed to have a mix of HostProcess containers and
                           non-HostProcess containers). In addition, if HostProcess is true then
                           HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process. Defaults
                           to the user specified in image metadata if unspecified. May also be set in
                           PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the
                           value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              podAnnotations:
                description: Optionally set some extra pod annotations.
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              podLabels:
                description: Optionally set some extra pod labels.
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              tolerations:
                description: Optionally add pod tolerations.
                items:
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                         When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint
                         keys. If the key is empty, operator must be Exists; this combination means to
                         match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value. Valid operators are
                         Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value,
                         so that a pod can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be of
                         effect NoExecute, otherwise this field is ignored) tolerates the taint. By
                         default, it is not set, which means tolerate the taint forever (do not evict).
                         Zero and negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to. If the operator is Exists,
                         the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: Optionally add topology spread constraints.
                items:
                  properties:
                    labelSelector:
                      description: |-
                        LabelSelector is used to find matching pods. Pods that match this label selector
                         are counted to determine the number of pods in their corresponding topology
                         domain.
                      properties:
                        matchExpressions:
                          description: |-
                            matchExpressions is a list of label selector requirements. The requirements are
                             ANDed.
                          items:
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values. Valid operators are
                                   In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn, the values
                                   array must be non-empty. If the operator is Exists or DoesNotExist, the values
                                   array must be empty. This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the
                             matchLabels map is equivalent to an element of matchExpressions, whose key field
                             is "key", the operator is "In", and the values array contains only "value". The
                             requirements are ANDed.
                          type: object
                      type: object
                    matchLabelKeys:
                      description: |-
                        MatchLabelKeys is a set of pod label keys to select the pods over which
                         spreading will be calculated. The keys are used to lookup values from the
                         incoming pod labels, those key-value labels are ANDed with labelSelector to
                         select the group of existing pods over which spreading will be calculated for
                         the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and
                         LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys
                         that don't exist in the incoming pod labels will be ignored. A null or empty
                         list means only match against labelSelector.

                         This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature
                         gate to be enabled (enabled by default).
                      items:
                        type: string
                      type: array
                    maxSkew:
                      description: |-
                        MaxSkew describes the degree to which pods may be unevenly distributed. When
                         `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                         between the number of matching pods in the target topology and the global
                         minimum. The global minimum is the minimum number of matching pods in an
                         eligible domain or zero if the number of eligible domains is less than
                         MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with
                         the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. |
                         zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming
                         pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto
                         zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1).
                         - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When
                         `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to
                         topologies that satisfy it. It's a required field. Default value is 1 and 0 is
                         not allowed.
                      format: int32
                      type: integer
                    minDomains:
                      description: |-
                        MinDomains indicates a minimum number of eligible domains. When the number of
                         eligible domains with matching topology keys is less than minDomains, Pod
                         Topology Spread treats "global minimum" as 0, and then the calculation of Skew
                         is performed. And when the number of eligible domains with matching topology
                         keys equals or greater than minDomains, this value has no effect on scheduling.
                         As a result, when the number of eligible domains is less than minDomains,
                         scheduler won't schedule more than maxSkew Pods to those domains. If value is
                         nil, the constraint behaves as if MinDomains is equal to 1. Valid values are
                         integers greater than 0. When value is not nil, WhenUnsatisfiable must be
                         DoNotSchedule.

                         For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5
                         and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 |
                         |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so
                         "global minimum" is treated as 0. In this situation, new pod with the same
                         labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new
                         Pod is scheduled to any of the three zones, it will violate MaxSkew.

                         This is a beta field and requires the MinDomainsInPodTopologySpread feature gate
                         to be enabled (enabled by default).
                      format: int32
                      type: integer
                    nodeAffinityPolicy:
                      description: |-
                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                         when calculating pod topology spread skew. Options are: - Honor: only nodes
                         matching nodeAffinity/nodeSelector are included in the calculations. - Ignore:
                         nodeAffinity/nodeSelector are ignored. All nodes are included in the
                         calculations.

                         If this value is nil, the behavior is equivalent to the Honor policy. This is a
                         beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                         feature flag.
                      type: string
                    nodeTaintsPolicy:
                      description: |-
                        NodeTaintsPolicy indicates how we will treat node taints when calculating pod
                         topology spread skew. Options are: - Honor: nodes without taints, along with
                         tainted nodes for which the incoming pod has a toleration, are included. -
                         Ignore: node taints are ignored. All nodes are included.

                         If this value is nil, the behavior is equivalent to the Ignore policy. This is a
                         beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                         feature flag.
                      type: string
                    topologyKey:
                      description: |-
                        TopologyKey is the key of node labels. Nodes that have a label with this key and
                         identical values are considered to be in the same topology. We consider each
                         <key, value> as a "bucket", and try to put balanced number of pods into each
                         bucket. We define a domain as a particular instance of a topology. Also, we
                         define an eligible domain as a domain whose nodes meet the requirements of
                         nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is
                         "kubernetes.io/hostname", each Node is a domain of that topology. And, if
                         TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that
                         topology. It's a required field.
                      type: string
                    whenUnsatisfiable:
                      description: |-
                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the
                         spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule
                         it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                         but giving higher precedence to topologies that would help reduce the
                         skew.
                         A constraint is considered "Unsatisfiable" for an incoming pod if and only if
                         every possible node assignment for that pod would violate "MaxSkew" on some
                         topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with
                         the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P 
                         |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be
                         scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on
                         zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be
                         imbalanced, but scheduler won't make it *more* imbalanced. It's a required
                         field.
                      type: string
                  type: object
                type: array
              apiKey:
                description: Optionally set an API Key. If the secret specified does not exist, it will be created.
                properties:
                  enabled:
                    description: Whether the api secret is enabled.
                    type: boolean
                  secret:
                    description: The reference to the secret. If not specified the secret will be qdrant-[cluster-name].
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: |-
                          Name of the referent. More info:
                           https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    type: object
                  keyLength:
                    description: The Api Key length.
                    format: int32
                    type: integer
                type: object
              readApiKey:
                description: Optionally set an API Key for read operations. If the secret specified does not exist, it will be created.
                properties:
                  enabled:
                    description: Whether the api secret is enabled.
                    type: boolean
                  secret:
                    description: The reference to the secret. If not specified the secret will be qdrant-[cluster-name].
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid secret key.
                        type: string
                      name:
                        description: |-
                          Name of the referent. More info:
                           https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be defined
                        type: boolean
                    type: object
                  keyLength:
                    description: The Api Key length.
                    format: int32
                    type: integer
                type: object
            type: object
          status:
            properties:
              message:
                description: The status message.
                type: string
              conditions:
                description: Conditions of status
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status
                         to another. This should be when the underlying condition changed.  If that is
                         not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                         This may be an empty string.
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was
                         set based upon. For instance, if .metadata.generation is currently 12, but the
                         .status.conditions[x].observedGeneration is 9, the condition is out of date with
                         respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the
                         condition's last transition. Producers of specific condition types may define
                         expected values and meanings for this field, and whether the values are
                         considered a guaranteed API. The value should be a CamelCase string. This field
                         may not be empty.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
